#!/bin/bash
set -eu


has(){
    type "$1" > /dev/null 2>&1
}

symlink(){
    if [ -e "$2" ]; then
        echo -n "file $2 already exists. override? [y/b/N]: "
        read ANS
        case $ANS in
            [Yy]* )
                rm -f "$2"
                echo "$2 removed"
                echo "linking $1 => $2"
                ln -s "$1" "$2"
                ;;
            [Bb]* )
                mv "$2" "$2.bak"
                echo "$2.bak created"
                echo "linking $1 => $2"
                ln -s "$1" "$2"
                ;;
            * )
                echo "skipping..."
                ;;
        esac
    else
        echo "linking $1 => $2"
        ln -s "$1" "$2"
    fi
}

link(){
    dotfiles=$HOME/dotfiles

    has vim && symlink "$dotfiles/.vimrc" "$HOME/.vimrc"
    has git && symlink "$dotfiles/.gitconfig" "$HOME/.gitconfig"
    has tmux && symlink "$dotfiles/.tmux.conf" "$HOME/.tmux.conf"
    symlink "$dotfiles/.bashrc" "$HOME/.bashrc"
}

copy(){
    dotfiles=$HOME/dotfiles

    cp "$dotfiles/.vimrc" "$HOME/.vimrc"
    cp "$dotfiles/.bashrc" "$HOME/.bashrc"
}

pull(){
    dotfiles=$HOME/dotfiles
    cd "$dotfiles"

    CID0=`git log --pretty=format:"%H" | head -n 1`
    CID1=`git ls-remote origin HEAD | awk '{print $1}'`
    if [ "$CID0" != "$CID1" ]; then
        echo "remote change found"
        echo "pulling changes..."
        git pull origin master > /dev/null 2>&1
        echo "pulled"
        git diff --stat "$CID0".."$CID1"
        return 0
    else
        echo "no remote change found"
        return 1
    fi
}

push(){
    dotfiles=$HOME/dotfiles
    cd "$dotfiles"
    msg=`git status -s | sed -e "s/^ //" -e "s/ /_/g"` || :
    git add .
    if git commit -m "$msg" > /dev/null 2>&1 ; then
        echo "local change found"
        git diff --stat HEAD^ HEAD
        echo "pushing changes..."
        git push origin master > /dev/null 2>&1
        echo "pushed to remote"
        return 0
    else
        echo "no local change found"
        return 1
    fi
}
sync(){
    set +eu
    pull 
    changed="$?"
    push
    set -eu
    if [ "$changed" == 0 ] && [ "$(uname)" == "MINGW64_NT-10.0-18362" ]; then
        yes | link
    fi
}
vi(){
    dotfiles=$HOME/dotfiles
    exec vi "$dotfiles"
}

if [ $# == 0 ]; then
    echo "no subcommand given. running \`dot sync\` ..."
    sync
    exit
fi

subcommand="$1"
shift

case $subcommand in
    pull)
        pull
        ;;
    push)
        push
        ;;
    sync)
        sync
        ;;
    copy)
        copy
        ;;
    link)
        link
        ;;
    vi)
        vi
        ;;
    *)
        echo "dotfiles commands"
        echo "pull"
        echo "push"
        echo "link"
        ;;
esac
