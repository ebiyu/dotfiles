# options
stty -ixon # Disable C-s
disable r # disable "r" command
setopt list_packed # 補完候補を詰めて表示する
setopt nolistbeep # 補完候補表示時などにピッピとビープ音をならないように設定
bindkey -e # emacs key bind

autoload bashcompinit && bashcompinit
# Set up completion
autoload -U compinit
compinit -u
fpath=(~/.zsh/completion $fpath)

zstyle ':completion:*' verbose yes
zstyle ':completion:*' format '%B%d%b'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors di=34 ln=35 ex=31 #補完に色をつける

# general-purposed bin directory
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"

# set up afx
type afx > /dev/null 2>&1 && eval "$(afx init)"
type afx > /dev/null 2>&1 && eval "$(afx completion zsh)"
type afx > /dev/null 2>&1 && compdef _afx afx

# Set up editor
export EDITOR=vim
type nvim > /dev/null 2>&1 && export EDITOR=nvim


# set up alias
source $HOME/.config/zsh/alias.zsh

# set up ghq
source $HOME/.config/zsh/ghq.zsh

# config around cd / ls
source $HOME/.config/zsh/ls.zsh

bindkey '^J' self-insert #C-jで改行

# Startship (prompt)
type starship > /dev/null 2>&1 && eval "$(starship init zsh)"

# C-zでfgを実行
function run-fglast {
    zle push-input
    BUFFER="fg %"
    zle accept-line
}
zle -N run-fglast
bindkey "^z" run-fglast

# Command history config
HISTFILE=~/.zsh_history
HISTSIZE=6000000
SAVEHIST=6000000
setopt hist_ignore_dups     # ignore duplication command history list
setopt share_history        # share command history data
setopt hist_ignore_space

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# edit-command-line
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^O' edit-command-line

# XXXenv
type anyenv > /dev/null 2>&1 && eval "$(anyenv init -)"
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
type pyenv > /dev/null 2>&1 && eval "$(pyenv init -)"
type direnv > /dev/null 2>&1 && eval "$(direnv hook zsh)"
type xienv > /dev/null 2>&1 && eval "$(xienv init -)"

# flutter
export PATH="$PATH:$HOME/flutter/flutter/bin:$HOME/.pub-cache/bin"

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/bin/google-cloud-sdk/path.zsh.inc" ]; then . "$HOME/bin/google-cloud-sdk/path.zsh.inc"; fi
if [ -f "$HOME/bin/google-cloud-sdk/completion.zsh.inc" ]; then . "$HOME/bin/google-cloud-sdk/completion.zsh.inc"; fi

# golang
export GO111MODULE=on
export PATH="/usr/local/go/bin:$PATH"

# chezmoi completion
type chezmoi > /dev/null 2>&1 && eval "$(chezmoi completion zsh)"

type minikube > /dev/null 2>&1 && alias kubectl="minikube kubectl --"

# add completion for aws cli
complete -C $(which aws_completer) aws

type neofetch > /dev/null 2>&1 && neofetch
